ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB144:
  27              		.file 1 "Core/Src/stm32h7xx_it.c"
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32h7xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32h7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32h7xx_it.c ****   *
  16:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32h7xx_it.c ****   */
  18:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32h7xx_it.c **** 
  20:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32h7xx_it.c **** #include "main.h"
  22:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  23:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32h7xx_it.c **** 
  27:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32h7xx_it.c **** 
  30:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32h7xx_it.c **** 
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 2


  32:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32h7xx_it.c **** 
  35:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32h7xx_it.c **** 
  37:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32h7xx_it.c **** 
  40:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32h7xx_it.c **** 
  42:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32h7xx_it.c **** 
  45:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32h7xx_it.c **** 
  47:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32h7xx_it.c **** 
  50:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32h7xx_it.c **** 
  52:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32h7xx_it.c **** 
  55:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32h7xx_it.c **** 
  57:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32h7xx_it.c **** extern FDCAN_HandleTypeDef hfdcan2;
  59:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_uart4_rx;
  60:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_uart5_rx;
  61:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  62:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  63:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  64:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart4;
  65:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart5;
  66:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart1;
  67:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart2;
  68:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart3;
  69:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  70:Core/Src/stm32h7xx_it.c **** 
  71:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  72:Core/Src/stm32h7xx_it.c **** 
  73:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  75:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  76:Core/Src/stm32h7xx_it.c **** /**
  77:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  78:Core/Src/stm32h7xx_it.c ****   */
  79:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  80:Core/Src/stm32h7xx_it.c **** {
  28              		.loc 1 80 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  81:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 3


  82:Core/Src/stm32h7xx_it.c **** 
  83:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  84:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32h7xx_it.c ****    while (1)
  35              		.loc 1 85 4 discriminator 1 view .LVU1
  86:Core/Src/stm32h7xx_it.c ****   {
  87:Core/Src/stm32h7xx_it.c ****   }
  36              		.loc 1 87 3 discriminator 1 view .LVU2
  85:Core/Src/stm32h7xx_it.c ****   {
  37              		.loc 1 85 10 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE144:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	HardFault_Handler:
  50              	.LFB145:
  88:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  89:Core/Src/stm32h7xx_it.c **** }
  90:Core/Src/stm32h7xx_it.c **** 
  91:Core/Src/stm32h7xx_it.c **** /**
  92:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  93:Core/Src/stm32h7xx_it.c ****   */
  94:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  95:Core/Src/stm32h7xx_it.c **** {
  51              		.loc 1 95 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  96:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  97:Core/Src/stm32h7xx_it.c **** 
  98:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  99:Core/Src/stm32h7xx_it.c ****   while (1)
  58              		.loc 1 99 3 discriminator 1 view .LVU5
 100:Core/Src/stm32h7xx_it.c ****   {
 101:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 102:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 103:Core/Src/stm32h7xx_it.c ****   }
  59              		.loc 1 103 3 discriminator 1 view .LVU6
  99:Core/Src/stm32h7xx_it.c ****   {
  60              		.loc 1 99 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE145:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 4


  72              	MemManage_Handler:
  73              	.LFB146:
 104:Core/Src/stm32h7xx_it.c **** }
 105:Core/Src/stm32h7xx_it.c **** 
 106:Core/Src/stm32h7xx_it.c **** /**
 107:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
 108:Core/Src/stm32h7xx_it.c ****   */
 109:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 110:Core/Src/stm32h7xx_it.c **** {
  74              		.loc 1 110 1 view -0
  75              		.cfi_startproc
  76              		@ Volatile: function does not return.
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.L6:
 111:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 112:Core/Src/stm32h7xx_it.c **** 
 113:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 114:Core/Src/stm32h7xx_it.c ****   while (1)
  81              		.loc 1 114 3 discriminator 1 view .LVU9
 115:Core/Src/stm32h7xx_it.c ****   {
 116:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 117:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 118:Core/Src/stm32h7xx_it.c ****   }
  82              		.loc 1 118 3 discriminator 1 view .LVU10
 114:Core/Src/stm32h7xx_it.c ****   {
  83              		.loc 1 114 9 discriminator 1 view .LVU11
  84 0000 FEE7     		b	.L6
  85              		.cfi_endproc
  86              	.LFE146:
  88              		.section	.text.BusFault_Handler,"ax",%progbits
  89              		.align	1
  90              		.global	BusFault_Handler
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	BusFault_Handler:
  96              	.LFB147:
 119:Core/Src/stm32h7xx_it.c **** }
 120:Core/Src/stm32h7xx_it.c **** 
 121:Core/Src/stm32h7xx_it.c **** /**
 122:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 123:Core/Src/stm32h7xx_it.c ****   */
 124:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 125:Core/Src/stm32h7xx_it.c **** {
  97              		.loc 1 125 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L8:
 126:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 127:Core/Src/stm32h7xx_it.c **** 
 128:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 129:Core/Src/stm32h7xx_it.c ****   while (1)
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 5


 104              		.loc 1 129 3 discriminator 1 view .LVU13
 130:Core/Src/stm32h7xx_it.c ****   {
 131:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 132:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 133:Core/Src/stm32h7xx_it.c ****   }
 105              		.loc 1 133 3 discriminator 1 view .LVU14
 129:Core/Src/stm32h7xx_it.c ****   {
 106              		.loc 1 129 9 discriminator 1 view .LVU15
 107 0000 FEE7     		b	.L8
 108              		.cfi_endproc
 109              	.LFE147:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	UsageFault_Handler:
 119              	.LFB148:
 134:Core/Src/stm32h7xx_it.c **** }
 135:Core/Src/stm32h7xx_it.c **** 
 136:Core/Src/stm32h7xx_it.c **** /**
 137:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 138:Core/Src/stm32h7xx_it.c ****   */
 139:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 140:Core/Src/stm32h7xx_it.c **** {
 120              		.loc 1 140 1 view -0
 121              		.cfi_startproc
 122              		@ Volatile: function does not return.
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.L10:
 141:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 142:Core/Src/stm32h7xx_it.c **** 
 143:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 144:Core/Src/stm32h7xx_it.c ****   while (1)
 127              		.loc 1 144 3 discriminator 1 view .LVU17
 145:Core/Src/stm32h7xx_it.c ****   {
 146:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 147:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 148:Core/Src/stm32h7xx_it.c ****   }
 128              		.loc 1 148 3 discriminator 1 view .LVU18
 144:Core/Src/stm32h7xx_it.c ****   {
 129              		.loc 1 144 9 discriminator 1 view .LVU19
 130 0000 FEE7     		b	.L10
 131              		.cfi_endproc
 132              	.LFE148:
 134              		.section	.text.SVC_Handler,"ax",%progbits
 135              		.align	1
 136              		.global	SVC_Handler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	SVC_Handler:
 142              	.LFB149:
 149:Core/Src/stm32h7xx_it.c **** }
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 6


 150:Core/Src/stm32h7xx_it.c **** 
 151:Core/Src/stm32h7xx_it.c **** /**
 152:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 153:Core/Src/stm32h7xx_it.c ****   */
 154:Core/Src/stm32h7xx_it.c **** void SVC_Handler(void)
 155:Core/Src/stm32h7xx_it.c **** {
 143              		.loc 1 155 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 156:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 157:Core/Src/stm32h7xx_it.c **** 
 158:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 159:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 160:Core/Src/stm32h7xx_it.c **** 
 161:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 162:Core/Src/stm32h7xx_it.c **** }
 148              		.loc 1 162 1 view .LVU21
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE149:
 153              		.section	.text.DebugMon_Handler,"ax",%progbits
 154              		.align	1
 155              		.global	DebugMon_Handler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	DebugMon_Handler:
 161              	.LFB150:
 163:Core/Src/stm32h7xx_it.c **** 
 164:Core/Src/stm32h7xx_it.c **** /**
 165:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 166:Core/Src/stm32h7xx_it.c ****   */
 167:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 168:Core/Src/stm32h7xx_it.c **** {
 162              		.loc 1 168 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 169:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 170:Core/Src/stm32h7xx_it.c **** 
 171:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 172:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 173:Core/Src/stm32h7xx_it.c **** 
 174:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 175:Core/Src/stm32h7xx_it.c **** }
 167              		.loc 1 175 1 view .LVU23
 168 0000 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE150:
 172              		.section	.text.PendSV_Handler,"ax",%progbits
 173              		.align	1
 174              		.global	PendSV_Handler
 175              		.syntax unified
 176              		.thumb
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 7


 177              		.thumb_func
 179              	PendSV_Handler:
 180              	.LFB151:
 176:Core/Src/stm32h7xx_it.c **** 
 177:Core/Src/stm32h7xx_it.c **** /**
 178:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
 179:Core/Src/stm32h7xx_it.c ****   */
 180:Core/Src/stm32h7xx_it.c **** void PendSV_Handler(void)
 181:Core/Src/stm32h7xx_it.c **** {
 181              		.loc 1 181 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 182:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 183:Core/Src/stm32h7xx_it.c **** 
 184:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 185:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 186:Core/Src/stm32h7xx_it.c **** 
 187:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 188:Core/Src/stm32h7xx_it.c **** }
 186              		.loc 1 188 1 view .LVU25
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE151:
 191              		.section	.text.SysTick_Handler,"ax",%progbits
 192              		.align	1
 193              		.global	SysTick_Handler
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	SysTick_Handler:
 199              	.LFB152:
 189:Core/Src/stm32h7xx_it.c **** 
 190:Core/Src/stm32h7xx_it.c **** /**
 191:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System tick timer.
 192:Core/Src/stm32h7xx_it.c ****   */
 193:Core/Src/stm32h7xx_it.c **** void SysTick_Handler(void)
 194:Core/Src/stm32h7xx_it.c **** {
 200              		.loc 1 194 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 08B5     		push	{r3, lr}
 205              	.LCFI0:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 195:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 196:Core/Src/stm32h7xx_it.c **** 
 197:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 198:Core/Src/stm32h7xx_it.c ****   HAL_IncTick();
 209              		.loc 1 198 3 view .LVU27
 210 0002 FFF7FEFF 		bl	HAL_IncTick
 211              	.LVL0:
 199:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 200:Core/Src/stm32h7xx_it.c **** 
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 8


 201:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 202:Core/Src/stm32h7xx_it.c **** }
 212              		.loc 1 202 1 is_stmt 0 view .LVU28
 213 0006 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
 215              	.LFE152:
 217              		.section	.text.DMA1_Stream0_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.global	DMA1_Stream0_IRQHandler
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	DMA1_Stream0_IRQHandler:
 225              	.LFB153:
 203:Core/Src/stm32h7xx_it.c **** 
 204:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 205:Core/Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 206:Core/Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 207:Core/Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 208:Core/Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 209:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 210:Core/Src/stm32h7xx_it.c **** 
 211:Core/Src/stm32h7xx_it.c **** /**
 212:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream0 global interrupt.
 213:Core/Src/stm32h7xx_it.c ****   */
 214:Core/Src/stm32h7xx_it.c **** void DMA1_Stream0_IRQHandler(void)
 215:Core/Src/stm32h7xx_it.c **** {
 226              		.loc 1 215 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              	.LCFI1:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 216:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */
 217:Core/Src/stm32h7xx_it.c **** 
 218:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 0 */
 219:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 235              		.loc 1 219 3 view .LVU30
 236 0002 0248     		ldr	r0, .L18
 237 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 238              	.LVL1:
 220:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */
 221:Core/Src/stm32h7xx_it.c **** 
 222:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 1 */
 223:Core/Src/stm32h7xx_it.c **** }
 239              		.loc 1 223 1 is_stmt 0 view .LVU31
 240 0008 08BD     		pop	{r3, pc}
 241              	.L19:
 242 000a 00BF     		.align	2
 243              	.L18:
 244 000c 00000000 		.word	hdma_usart1_rx
 245              		.cfi_endproc
 246              	.LFE153:
 248              		.section	.text.DMA1_Stream1_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 9


 249              		.align	1
 250              		.global	DMA1_Stream1_IRQHandler
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 255              	DMA1_Stream1_IRQHandler:
 256              	.LFB154:
 224:Core/Src/stm32h7xx_it.c **** 
 225:Core/Src/stm32h7xx_it.c **** /**
 226:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream1 global interrupt.
 227:Core/Src/stm32h7xx_it.c ****   */
 228:Core/Src/stm32h7xx_it.c **** void DMA1_Stream1_IRQHandler(void)
 229:Core/Src/stm32h7xx_it.c **** {
 257              		.loc 1 229 1 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 08B5     		push	{r3, lr}
 262              	.LCFI2:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 3, -8
 265              		.cfi_offset 14, -4
 230:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */
 231:Core/Src/stm32h7xx_it.c **** 
 232:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 0 */
 233:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 266              		.loc 1 233 3 view .LVU33
 267 0002 0248     		ldr	r0, .L22
 268 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 269              	.LVL2:
 234:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */
 235:Core/Src/stm32h7xx_it.c **** 
 236:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 1 */
 237:Core/Src/stm32h7xx_it.c **** }
 270              		.loc 1 237 1 is_stmt 0 view .LVU34
 271 0008 08BD     		pop	{r3, pc}
 272              	.L23:
 273 000a 00BF     		.align	2
 274              	.L22:
 275 000c 00000000 		.word	hdma_usart2_rx
 276              		.cfi_endproc
 277              	.LFE154:
 279              		.section	.text.DMA1_Stream2_IRQHandler,"ax",%progbits
 280              		.align	1
 281              		.global	DMA1_Stream2_IRQHandler
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 286              	DMA1_Stream2_IRQHandler:
 287              	.LFB155:
 238:Core/Src/stm32h7xx_it.c **** 
 239:Core/Src/stm32h7xx_it.c **** /**
 240:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream2 global interrupt.
 241:Core/Src/stm32h7xx_it.c ****   */
 242:Core/Src/stm32h7xx_it.c **** void DMA1_Stream2_IRQHandler(void)
 243:Core/Src/stm32h7xx_it.c **** {
 288              		.loc 1 243 1 is_stmt 1 view -0
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 10


 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292 0000 08B5     		push	{r3, lr}
 293              	.LCFI3:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 3, -8
 296              		.cfi_offset 14, -4
 244:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */
 245:Core/Src/stm32h7xx_it.c **** 
 246:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 0 */
 247:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_rx);
 297              		.loc 1 247 3 view .LVU36
 298 0002 0248     		ldr	r0, .L26
 299 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 300              	.LVL3:
 248:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */
 249:Core/Src/stm32h7xx_it.c **** 
 250:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 1 */
 251:Core/Src/stm32h7xx_it.c **** }
 301              		.loc 1 251 1 is_stmt 0 view .LVU37
 302 0008 08BD     		pop	{r3, pc}
 303              	.L27:
 304 000a 00BF     		.align	2
 305              	.L26:
 306 000c 00000000 		.word	hdma_usart3_rx
 307              		.cfi_endproc
 308              	.LFE155:
 310              		.section	.text.DMA1_Stream3_IRQHandler,"ax",%progbits
 311              		.align	1
 312              		.global	DMA1_Stream3_IRQHandler
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 317              	DMA1_Stream3_IRQHandler:
 318              	.LFB156:
 252:Core/Src/stm32h7xx_it.c **** 
 253:Core/Src/stm32h7xx_it.c **** /**
 254:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream3 global interrupt.
 255:Core/Src/stm32h7xx_it.c ****   */
 256:Core/Src/stm32h7xx_it.c **** void DMA1_Stream3_IRQHandler(void)
 257:Core/Src/stm32h7xx_it.c **** {
 319              		.loc 1 257 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 08B5     		push	{r3, lr}
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 258:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */
 259:Core/Src/stm32h7xx_it.c **** 
 260:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 0 */
 261:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_uart4_rx);
 328              		.loc 1 261 3 view .LVU39
 329 0002 0248     		ldr	r0, .L30
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 11


 330 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 331              	.LVL4:
 262:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */
 263:Core/Src/stm32h7xx_it.c **** 
 264:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 1 */
 265:Core/Src/stm32h7xx_it.c **** }
 332              		.loc 1 265 1 is_stmt 0 view .LVU40
 333 0008 08BD     		pop	{r3, pc}
 334              	.L31:
 335 000a 00BF     		.align	2
 336              	.L30:
 337 000c 00000000 		.word	hdma_uart4_rx
 338              		.cfi_endproc
 339              	.LFE156:
 341              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 342              		.align	1
 343              		.global	DMA1_Stream4_IRQHandler
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 348              	DMA1_Stream4_IRQHandler:
 349              	.LFB157:
 266:Core/Src/stm32h7xx_it.c **** 
 267:Core/Src/stm32h7xx_it.c **** /**
 268:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream4 global interrupt.
 269:Core/Src/stm32h7xx_it.c ****   */
 270:Core/Src/stm32h7xx_it.c **** void DMA1_Stream4_IRQHandler(void)
 271:Core/Src/stm32h7xx_it.c **** {
 350              		.loc 1 271 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354 0000 08B5     		push	{r3, lr}
 355              	.LCFI5:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 3, -8
 358              		.cfi_offset 14, -4
 272:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */
 273:Core/Src/stm32h7xx_it.c **** 
 274:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 0 */
 275:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_uart5_rx);
 359              		.loc 1 275 3 view .LVU42
 360 0002 0248     		ldr	r0, .L34
 361 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 362              	.LVL5:
 276:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */
 277:Core/Src/stm32h7xx_it.c **** 
 278:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 1 */
 279:Core/Src/stm32h7xx_it.c **** }
 363              		.loc 1 279 1 is_stmt 0 view .LVU43
 364 0008 08BD     		pop	{r3, pc}
 365              	.L35:
 366 000a 00BF     		.align	2
 367              	.L34:
 368 000c 00000000 		.word	hdma_uart5_rx
 369              		.cfi_endproc
 370              	.LFE157:
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 12


 372              		.section	.text.FDCAN2_IT0_IRQHandler,"ax",%progbits
 373              		.align	1
 374              		.global	FDCAN2_IT0_IRQHandler
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 379              	FDCAN2_IT0_IRQHandler:
 380              	.LFB158:
 280:Core/Src/stm32h7xx_it.c **** 
 281:Core/Src/stm32h7xx_it.c **** /**
 282:Core/Src/stm32h7xx_it.c ****   * @brief This function handles FDCAN2 interrupt 0.
 283:Core/Src/stm32h7xx_it.c ****   */
 284:Core/Src/stm32h7xx_it.c **** void FDCAN2_IT0_IRQHandler(void)
 285:Core/Src/stm32h7xx_it.c **** {
 381              		.loc 1 285 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385 0000 08B5     		push	{r3, lr}
 386              	.LCFI6:
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 3, -8
 389              		.cfi_offset 14, -4
 286:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN FDCAN2_IT0_IRQn 0 */
 287:Core/Src/stm32h7xx_it.c **** 
 288:Core/Src/stm32h7xx_it.c ****   /* USER CODE END FDCAN2_IT0_IRQn 0 */
 289:Core/Src/stm32h7xx_it.c ****   HAL_FDCAN_IRQHandler(&hfdcan2);
 390              		.loc 1 289 3 view .LVU45
 391 0002 0248     		ldr	r0, .L38
 392 0004 FFF7FEFF 		bl	HAL_FDCAN_IRQHandler
 393              	.LVL6:
 290:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN FDCAN2_IT0_IRQn 1 */
 291:Core/Src/stm32h7xx_it.c **** 
 292:Core/Src/stm32h7xx_it.c ****   /* USER CODE END FDCAN2_IT0_IRQn 1 */
 293:Core/Src/stm32h7xx_it.c **** }
 394              		.loc 1 293 1 is_stmt 0 view .LVU46
 395 0008 08BD     		pop	{r3, pc}
 396              	.L39:
 397 000a 00BF     		.align	2
 398              	.L38:
 399 000c 00000000 		.word	hfdcan2
 400              		.cfi_endproc
 401              	.LFE158:
 403              		.section	.text.FDCAN2_IT1_IRQHandler,"ax",%progbits
 404              		.align	1
 405              		.global	FDCAN2_IT1_IRQHandler
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	FDCAN2_IT1_IRQHandler:
 411              	.LFB159:
 294:Core/Src/stm32h7xx_it.c **** 
 295:Core/Src/stm32h7xx_it.c **** /**
 296:Core/Src/stm32h7xx_it.c ****   * @brief This function handles FDCAN2 interrupt 1.
 297:Core/Src/stm32h7xx_it.c ****   */
 298:Core/Src/stm32h7xx_it.c **** void FDCAN2_IT1_IRQHandler(void)
 299:Core/Src/stm32h7xx_it.c **** {
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 13


 412              		.loc 1 299 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
 300:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN FDCAN2_IT1_IRQn 0 */
 301:Core/Src/stm32h7xx_it.c **** 
 302:Core/Src/stm32h7xx_it.c ****   /* USER CODE END FDCAN2_IT1_IRQn 0 */
 303:Core/Src/stm32h7xx_it.c ****   HAL_FDCAN_IRQHandler(&hfdcan2);
 421              		.loc 1 303 3 view .LVU48
 422 0002 0248     		ldr	r0, .L42
 423 0004 FFF7FEFF 		bl	HAL_FDCAN_IRQHandler
 424              	.LVL7:
 304:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN FDCAN2_IT1_IRQn 1 */
 305:Core/Src/stm32h7xx_it.c **** 
 306:Core/Src/stm32h7xx_it.c ****   /* USER CODE END FDCAN2_IT1_IRQn 1 */
 307:Core/Src/stm32h7xx_it.c **** }
 425              		.loc 1 307 1 is_stmt 0 view .LVU49
 426 0008 08BD     		pop	{r3, pc}
 427              	.L43:
 428 000a 00BF     		.align	2
 429              	.L42:
 430 000c 00000000 		.word	hfdcan2
 431              		.cfi_endproc
 432              	.LFE159:
 434              		.section	.text.USART1_IRQHandler,"ax",%progbits
 435              		.align	1
 436              		.global	USART1_IRQHandler
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 441              	USART1_IRQHandler:
 442              	.LFB160:
 308:Core/Src/stm32h7xx_it.c **** 
 309:Core/Src/stm32h7xx_it.c **** /**
 310:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART1 global interrupt.
 311:Core/Src/stm32h7xx_it.c ****   */
 312:Core/Src/stm32h7xx_it.c **** void USART1_IRQHandler(void)
 313:Core/Src/stm32h7xx_it.c **** {
 443              		.loc 1 313 1 is_stmt 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447 0000 08B5     		push	{r3, lr}
 448              	.LCFI8:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 3, -8
 451              		.cfi_offset 14, -4
 314:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 315:Core/Src/stm32h7xx_it.c **** 
 316:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 317:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 452              		.loc 1 317 3 view .LVU51
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 14


 453 0002 0248     		ldr	r0, .L46
 454 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 455              	.LVL8:
 318:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 319:Core/Src/stm32h7xx_it.c **** 
 320:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 321:Core/Src/stm32h7xx_it.c **** }
 456              		.loc 1 321 1 is_stmt 0 view .LVU52
 457 0008 08BD     		pop	{r3, pc}
 458              	.L47:
 459 000a 00BF     		.align	2
 460              	.L46:
 461 000c 00000000 		.word	huart1
 462              		.cfi_endproc
 463              	.LFE160:
 465              		.section	.text.USART2_IRQHandler,"ax",%progbits
 466              		.align	1
 467              		.global	USART2_IRQHandler
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 472              	USART2_IRQHandler:
 473              	.LFB161:
 322:Core/Src/stm32h7xx_it.c **** 
 323:Core/Src/stm32h7xx_it.c **** /**
 324:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART2 global interrupt.
 325:Core/Src/stm32h7xx_it.c ****   */
 326:Core/Src/stm32h7xx_it.c **** void USART2_IRQHandler(void)
 327:Core/Src/stm32h7xx_it.c **** {
 474              		.loc 1 327 1 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 08B5     		push	{r3, lr}
 479              	.LCFI9:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 3, -8
 482              		.cfi_offset 14, -4
 328:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 329:Core/Src/stm32h7xx_it.c **** 
 330:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 331:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 483              		.loc 1 331 3 view .LVU54
 484 0002 0248     		ldr	r0, .L50
 485 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 486              	.LVL9:
 332:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 333:Core/Src/stm32h7xx_it.c **** 
 334:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 335:Core/Src/stm32h7xx_it.c **** }
 487              		.loc 1 335 1 is_stmt 0 view .LVU55
 488 0008 08BD     		pop	{r3, pc}
 489              	.L51:
 490 000a 00BF     		.align	2
 491              	.L50:
 492 000c 00000000 		.word	huart2
 493              		.cfi_endproc
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 15


 494              	.LFE161:
 496              		.section	.text.USART3_IRQHandler,"ax",%progbits
 497              		.align	1
 498              		.global	USART3_IRQHandler
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 503              	USART3_IRQHandler:
 504              	.LFB162:
 336:Core/Src/stm32h7xx_it.c **** 
 337:Core/Src/stm32h7xx_it.c **** /**
 338:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART3 global interrupt.
 339:Core/Src/stm32h7xx_it.c ****   */
 340:Core/Src/stm32h7xx_it.c **** void USART3_IRQHandler(void)
 341:Core/Src/stm32h7xx_it.c **** {
 505              		.loc 1 341 1 is_stmt 1 view -0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509 0000 08B5     		push	{r3, lr}
 510              	.LCFI10:
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 3, -8
 513              		.cfi_offset 14, -4
 342:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 343:Core/Src/stm32h7xx_it.c **** 
 344:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 345:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 514              		.loc 1 345 3 view .LVU57
 515 0002 0248     		ldr	r0, .L54
 516 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 517              	.LVL10:
 346:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 347:Core/Src/stm32h7xx_it.c **** 
 348:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 349:Core/Src/stm32h7xx_it.c **** }
 518              		.loc 1 349 1 is_stmt 0 view .LVU58
 519 0008 08BD     		pop	{r3, pc}
 520              	.L55:
 521 000a 00BF     		.align	2
 522              	.L54:
 523 000c 00000000 		.word	huart3
 524              		.cfi_endproc
 525              	.LFE162:
 527              		.section	.text.UART4_IRQHandler,"ax",%progbits
 528              		.align	1
 529              		.global	UART4_IRQHandler
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 534              	UART4_IRQHandler:
 535              	.LFB163:
 350:Core/Src/stm32h7xx_it.c **** 
 351:Core/Src/stm32h7xx_it.c **** /**
 352:Core/Src/stm32h7xx_it.c ****   * @brief This function handles UART4 global interrupt.
 353:Core/Src/stm32h7xx_it.c ****   */
 354:Core/Src/stm32h7xx_it.c **** void UART4_IRQHandler(void)
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 16


 355:Core/Src/stm32h7xx_it.c **** {
 536              		.loc 1 355 1 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 08B5     		push	{r3, lr}
 541              	.LCFI11:
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 3, -8
 544              		.cfi_offset 14, -4
 356:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 0 */
 357:Core/Src/stm32h7xx_it.c **** 
 358:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UART4_IRQn 0 */
 359:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart4);
 545              		.loc 1 359 3 view .LVU60
 546 0002 0248     		ldr	r0, .L58
 547 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 548              	.LVL11:
 360:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 1 */
 361:Core/Src/stm32h7xx_it.c **** 
 362:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UART4_IRQn 1 */
 363:Core/Src/stm32h7xx_it.c **** }
 549              		.loc 1 363 1 is_stmt 0 view .LVU61
 550 0008 08BD     		pop	{r3, pc}
 551              	.L59:
 552 000a 00BF     		.align	2
 553              	.L58:
 554 000c 00000000 		.word	huart4
 555              		.cfi_endproc
 556              	.LFE163:
 558              		.section	.text.UART5_IRQHandler,"ax",%progbits
 559              		.align	1
 560              		.global	UART5_IRQHandler
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	UART5_IRQHandler:
 566              	.LFB164:
 364:Core/Src/stm32h7xx_it.c **** 
 365:Core/Src/stm32h7xx_it.c **** /**
 366:Core/Src/stm32h7xx_it.c ****   * @brief This function handles UART5 global interrupt.
 367:Core/Src/stm32h7xx_it.c ****   */
 368:Core/Src/stm32h7xx_it.c **** void UART5_IRQHandler(void)
 369:Core/Src/stm32h7xx_it.c **** {
 567              		.loc 1 369 1 is_stmt 1 view -0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571 0000 08B5     		push	{r3, lr}
 572              	.LCFI12:
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 3, -8
 575              		.cfi_offset 14, -4
 370:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UART5_IRQn 0 */
 371:Core/Src/stm32h7xx_it.c **** 
 372:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UART5_IRQn 0 */
 373:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart5);
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 17


 576              		.loc 1 373 3 view .LVU63
 577 0002 0248     		ldr	r0, .L62
 578 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 579              	.LVL12:
 374:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UART5_IRQn 1 */
 375:Core/Src/stm32h7xx_it.c **** 
 376:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UART5_IRQn 1 */
 377:Core/Src/stm32h7xx_it.c **** }
 580              		.loc 1 377 1 is_stmt 0 view .LVU64
 581 0008 08BD     		pop	{r3, pc}
 582              	.L63:
 583 000a 00BF     		.align	2
 584              	.L62:
 585 000c 00000000 		.word	huart5
 586              		.cfi_endproc
 587              	.LFE164:
 589              		.text
 590              	.Letext0:
 591              		.file 2 "d:\\rm\\arm-gnu-toolchian\\arm-none-eabi\\include\\machine\\_default_types.h"
 592              		.file 3 "d:\\rm\\arm-gnu-toolchian\\arm-none-eabi\\include\\sys\\_stdint.h"
 593              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 594              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 595              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 596              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 597              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_fdcan.h"
 598              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 599              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_it.c
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:19     .text.NMI_Handler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:43     .text.HardFault_Handler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:49     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:66     .text.MemManage_Handler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:72     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:89     .text.BusFault_Handler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:95     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:112    .text.UsageFault_Handler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:118    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:135    .text.SVC_Handler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:141    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:154    .text.DebugMon_Handler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:160    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:173    .text.PendSV_Handler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:179    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:192    .text.SysTick_Handler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:198    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:218    .text.DMA1_Stream0_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:224    .text.DMA1_Stream0_IRQHandler:00000000 DMA1_Stream0_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:244    .text.DMA1_Stream0_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:249    .text.DMA1_Stream1_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:255    .text.DMA1_Stream1_IRQHandler:00000000 DMA1_Stream1_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:275    .text.DMA1_Stream1_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:280    .text.DMA1_Stream2_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:286    .text.DMA1_Stream2_IRQHandler:00000000 DMA1_Stream2_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:306    .text.DMA1_Stream2_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:311    .text.DMA1_Stream3_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:317    .text.DMA1_Stream3_IRQHandler:00000000 DMA1_Stream3_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:337    .text.DMA1_Stream3_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:342    .text.DMA1_Stream4_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:348    .text.DMA1_Stream4_IRQHandler:00000000 DMA1_Stream4_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:368    .text.DMA1_Stream4_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:373    .text.FDCAN2_IT0_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:379    .text.FDCAN2_IT0_IRQHandler:00000000 FDCAN2_IT0_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:399    .text.FDCAN2_IT0_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:404    .text.FDCAN2_IT1_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:410    .text.FDCAN2_IT1_IRQHandler:00000000 FDCAN2_IT1_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:430    .text.FDCAN2_IT1_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:435    .text.USART1_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:441    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:461    .text.USART1_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:466    .text.USART2_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:472    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:492    .text.USART2_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:497    .text.USART3_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:503    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:523    .text.USART3_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:528    .text.UART4_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:534    .text.UART4_IRQHandler:00000000 UART4_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:554    .text.UART4_IRQHandler:0000000c $d
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:559    .text.UART5_IRQHandler:00000000 $t
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:565    .text.UART5_IRQHandler:00000000 UART5_IRQHandler
C:\Users\blue\AppData\Local\Temp\ccIX08f9.s:585    .text.UART5_IRQHandler:0000000c $d

ARM GAS  C:\Users\blue\AppData\Local\Temp\ccIX08f9.s 			page 19


UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart1_rx
hdma_usart2_rx
hdma_usart3_rx
hdma_uart4_rx
hdma_uart5_rx
HAL_FDCAN_IRQHandler
hfdcan2
HAL_UART_IRQHandler
huart1
huart2
huart3
huart4
huart5
