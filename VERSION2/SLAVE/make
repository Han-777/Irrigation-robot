# ##########################################################################################################################
# # File automatically-generated by tool: [projectgenerator] version: [4.4.0-B60] date: [Tue Jul 23 14:24:02 CST 2024] 
# ##########################################################################################################################

# # ------------------------------------------------
# # Generic Makefile (based on gcc)
# #
# # ChangeLog :
# #	2017-02-10 - Several enhancements + project update mode
# #   2015-07-22 - first version
# # ------------------------------------------------

# ######################################
# # target
# ######################################
# TARGET = Irrigation_framework


# ######################################
# # building variables
# ######################################
# # debug build?
# DEBUG = 1
# # optimization
# OPT = -Og


# #######################################
# # paths
# #######################################
# # Build path
# BUILD_DIR = build

# ######################################
# # source
# ######################################
# # C sources
# C_SOURCES =  \
# Core/Src/main.c \
# Core/Src/gpio.c \
# Core/Src/dma.c \
# Core/Src/memorymap.c \
# Core/Src/tim.c \
# Core/Src/usart.c \
# Core/Src/stm32h7xx_it.c \
# Core/Src/stm32h7xx_hal_msp.c \
# Core/Src/crc.c \
# Core/Src/rng.c \
# Core/Src/rtc.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc_ex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_gpio.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma_ex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr_ex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c_ex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_exti.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim_ex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc_ex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rng.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rng_ex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c \
# Core/Src/system_stm32h7xx.c \
# Core/Src/sysmem.c \
# Core/Src/syscalls.c \
# Core/Src/fdcan.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c \
# bsp/usart/bsp_usart.c \
# bsp/can/bsp_can.c \
# bsp/dwt/bsp_dwt.c \
# bsp/tools/bsp_tools.c \
# bsp/exti/bsp_exti.c \
# modules/lidar/lidar.c \
# modules/daemon/daemon.c \
# modules/gyro/gyro.c \
# modules/mp3/mp3.c \
# modules/photoelectric/photoelectric.c \
# application/chassis/chassis.c \
# Core/Src/freertos.c \
# Core/Src/stm32h7xx_hal_timebase_tim.c \
# Middlewares/Third_Party/FreeRTOS/Source/croutine.c \
# Middlewares/Third_Party/FreeRTOS/Source/event_groups.c \
# Middlewares/Third_Party/FreeRTOS/Source/list.c \
# Middlewares/Third_Party/FreeRTOS/Source/queue.c \
# Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c \
# Middlewares/Third_Party/FreeRTOS/Source/tasks.c \
# Middlewares/Third_Party/FreeRTOS/Source/timers.c \
# Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c \
# Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c \
# Core/Src/dma2d.c \
# Core/Src/ltdc.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ltdc.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ltdc_ex.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dsi.c \
# Core/Src/fmc.c \
# Core/Src/quadspi.c \
# TouchGFX/target/TouchGFXHAL.cpp \
# TouchGFX/target/STM32TouchController.cpp \
# TouchGFX/target/TouchGFXGPIO.cpp \
# TouchGFX/target/generated/TouchGFXConfiguration.cpp \
# TouchGFX/target/generated/TouchGFXGeneratedHAL.cpp \
# TouchGFX/target/generated/STM32DMA.cpp \
# TouchGFX/target/generated/OSWrappers.cpp \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_fmc.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c \
# Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c \
# Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c \
# TouchGFX/App/app_touchgfx.c



# # ASM sources
# ASM_SOURCES =  \
# startup_stm32h743xx.s


# #######################################
# # binaries
# #######################################
# PREFIX = arm-none-eabi-
# # The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# # either it can be added to the PATH environment variable.
# ifdef GCC_PATH
# CC = $(GCC_PATH)/$(PREFIX)gcc
# AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
# CP = $(GCC_PATH)/$(PREFIX)objcopy
# SZ = $(GCC_PATH)/$(PREFIX)size
# else
# CC = $(PREFIX)gcc
# AS = $(PREFIX)gcc -x assembler-with-cpp
# CP = $(PREFIX)objcopy
# SZ = $(PREFIX)size
# endif
# HEX = $(CP) -O ihex
# BIN = $(CP) -O binary -S
 
# #######################################
# # CFLAGS
# #######################################
# # cpu
# CPU = -mcpu=cortex-m7

# # fpu
# FPU = -mfpu=fpv5-d16

# # float-abi
# FLOAT-ABI = -mfloat-abi=hard

# # mcu
# MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# # macros for gcc
# # AS defines
# AS_DEFS = 

# # C defines
# C_DEFS =  \
# -DUSE_HAL_DRIVER \
# -DSTM32H743xx


# # AS includes
# AS_INCLUDES = 

# # C includes
# C_INCLUDES =  \
# -ICore/Inc \
# -IDrivers/STM32H7xx_HAL_Driver/Inc \
# -IDrivers/STM32H7xx_HAL_Driver/Inc/Legacy \
# -IDrivers/CMSIS/Device/ST/STM32H7xx/Include \
# -IDrivers/CMSIS/Include \
# -Ibsp/usart \
# -Ibsp/can \
# -Ibsp/dwt \
# -Ibsp/tools \
# -Ibsp/exti \
# -Ibsp \
# -Imodules/lidar \
# -Imodules/daemon \
# -Imodules/gyro \
# -Imodules/mp3 \
# -Imodules/photoelectric \
# -Iapplication/chassis \
# -IMiddlewares/Third_Party/FreeRTOS/Source/include \
# -IMiddlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F \
# -IMiddlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2 \
# -ITouchGFX/App \
# -ITouchGFX/target/generated \
# -ITouchGFX/target


# ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

# CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

# ifeq ($(DEBUG), 1)
# CFLAGS += -g -gdwarf-2
# endif


# # Generate dependency information
# CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


# #######################################
# # LDFLAGS
# #######################################
# # link script
# LDSCRIPT = STM32H743XIHx_FLASH.ld

# # libraries
# LIBS = -lc -lm -lnosys 
# LIBDIR = 
# LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# # default action: build all
# all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


# #######################################
# # build the application
# #######################################
# # list of objects
# OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
# vpath %.c $(sort $(dir $(C_SOURCES)))
# # list of ASM program objects
# OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
# vpath %.s $(sort $(dir $(ASM_SOURCES)))
# OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
# vpath %.S $(sort $(dir $(ASMM_SOURCES)))

# $(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
# 	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

# $(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
# 	$(AS) -c $(CFLAGS) $< -o $@
# $(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
# 	$(AS) -c $(CFLAGS) $< -o $@

# $(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
# 	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
# 	$(SZ) $@

# $(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
# 	$(HEX) $< $@
	
# $(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
# 	$(BIN) $< $@	
	
# $(BUILD_DIR):
# 	mkdir $@		

# #######################################
# # clean up
# #######################################
# clean:
# 	-rm -fR $(BUILD_DIR)
  
# #######################################
# # dependencies
# #######################################
# -include $(wildcard $(BUILD_DIR)/*.d)

# #######################################
# # download directl without debugging
# #######################################
# download_dap:
# 	openocd -f openocd_dap.cfg -c init -c halt -c "flash write_image erase $(BUILD_DIR)/$(TARGET).bin 0x08000000" -c reset -c shutdown
# download_jlink:
# 	JFlash -openprj'stm32.jflash' -open'$(BUILD_DIR)/$(TARGET).hex',0x8000000 -auto -startapp -exit

# # *** EOF ***



##########################################################################################################################
# CPP VERSION
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = Irrigation_framework


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
Core/Src/main.c \
Core/Src/gpio.c \
Core/Src/dma.c \
Core/Src/memorymap.c \
Core/Src/tim.c \
Core/Src/usart.c \
Core/Src/stm32h7xx_it.c \
Core/Src/stm32h7xx_hal_msp.c \
Core/Src/crc.c \
Core/Src/rng.c \
Core/Src/rtc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_gpio.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_exti.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_crc_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rng.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rng_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rtc_ex.c \
Core/Src/system_stm32h7xx.c \
Core/Src/sysmem.c \
Core/Src/syscalls.c \
Core/Src/fdcan.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c \
bsp/usart/bsp_usart.c \
bsp/can/bsp_can.c \
bsp/dwt/bsp_dwt.c \
bsp/tools/bsp_tools.c \
bsp/exti/bsp_exti.c \
modules/lidar/lidar.c \
modules/daemon/daemon.c \
modules/gyro/gyro.c \
modules/mp3/mp3.c \
modules/photoelectric/photoelectric.c \
application/chassis/chassis.c \
Core/Src/freertos.c \
Core/Src/stm32h7xx_hal_timebase_tim.c \
Middlewares/Third_Party/FreeRTOS/Source/croutine.c \
Middlewares/Third_Party/FreeRTOS/Source/event_groups.c \
Middlewares/Third_Party/FreeRTOS/Source/list.c \
Middlewares/Third_Party/FreeRTOS/Source/queue.c \
Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c \
Middlewares/Third_Party/FreeRTOS/Source/tasks.c \
Middlewares/Third_Party/FreeRTOS/Source/timers.c \
Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c \
Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c \
Core/Src/dma2d.c \
Core/Src/ltdc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma2d.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ltdc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_ltdc_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dsi.c \
Core/Src/fmc.c \
Core/Src/quadspi.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_fmc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sdram.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_qspi.c \
Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c \
TouchGFX/App/app_touchgfx.c


# CPP sources
CPP_SOURCES =  \
TouchGFX/target/TouchGFXHAL.cpp \
TouchGFX/target/STM32TouchController.cpp \
TouchGFX/target/TouchGFXGPIO.cpp \
TouchGFX/target/generated/TouchGFXConfiguration.cpp \
TouchGFX/target/generated/TouchGFXGeneratedHAL.cpp \
TouchGFX/target/generated/STM32DMA.cpp \
TouchGFX/target/generated/OSWrappers.cpp \

# ASM sources
ASM_SOURCES =  \
startup_stm32h743xx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
CXX = $(GCC_PATH)/$(PREFIX)g++
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
CXX = $(PREFIX)g++
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32H743xx


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-ICore/Inc \
-IDrivers/STM32H7xx_HAL_Driver/Inc \
-IDrivers/STM32H7xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32H7xx/Include \
-IDrivers/CMSIS/Include \
-Ibsp/usart \
-Ibsp/can \
-Ibsp/dwt \
-Ibsp/tools \
-Ibsp/exti \
-Ibsp \
-Imodules/lidar \
-Imodules/daemon \
-Imodules/gyro \
-Imodules/mp3 \
-Imodules/photoelectric \
-Iapplication/chassis \
-IMiddlewares/Third_Party/FreeRTOS/Source/include \
-IMiddlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F \
-IMiddlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2 \
-ITouchGFX/App \
-ITouchGFX/target/generated \
-ITouchGFX/target \
-ITouchGFX \
-IMiddlewares/Third_Party/TouchGFX \
-IMiddlewares/Third_Party/TouchGFX/include


ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CPPFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections -fno-rtti -fno-exceptions

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
CPPFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"
CPPFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32H743XIHx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(CPP_SOURCES:.cpp=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
vpath %.cpp $(sort $(dir $(CPP_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.cpp Makefile | $(BUILD_DIR)
	$(CXX) -c $(CPPFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cpp=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CXX) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

#######################################
# download directl without debugging
#######################################
download_dap:
	openocd -f openocd_dap.cfg -c init -c halt -c "flash write_image erase $(BUILD_DIR)/$(TARGET).bin 0x08000000" -c reset -c shutdown
download_jlink:
	JFlash -openprj'stm32.jflash' -open'$(BUILD_DIR)/$(TARGET).hex',0x8000000 -auto -startapp -exit

# *** EOF ***